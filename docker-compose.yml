version: "3.4"

networks:
   frontend:
   backend:

services:
   catalog:
      build:
         context: .\ProductCatalogAPI
         dockerfile: Dockerfile
      image: events/productcatalogapi
      environment:
         DatabaseServer: mssqlserver
         DatabaseName: eventCatalogDb
         DatabaseUser: sa
         DatabasePassword: ProductApi(!)
      container_name: catalogapi
      ports:
         - "5000:80"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver

   webmvc:
      build:
         context: .\WebMVC
         dockerfile: Dockerfile
      environment:
         ASPNETCORE_ENVIRONMENT: Development
         CatalogUrl: http://catalog
         IdentityUrl: http://192.168.1.11:5001
         CartUrl: http://cart
         OrderUrl: http://order
      container_name: webshop
      ports:
         - "5200:80"
      networks:
         - frontend
      depends_on:
         - catalog
         - tokenserver 

   tokenserver:
      build:
         context: .\TokenServiceApi
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         MvcClient: http://localhost:5200  
         BasketApiClient: http://localhost:5003
         OrderApiClient: http://localhost:5004
      container_name: tokenserviceapi
      ports:
         - "5001:80"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver

   cart:
      build: 
         context: .\CartApi
         dockerfile: Dockerfile
      image: cartimage
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         IdentityUrl: http://tokenserver
      container_name: cartapi
      ports:
         - "5003:80"
      networks:
         - backend
         - frontend 
      depends_on:
         - basket.data
         - tokenserver
         - rabbitmq

   order:
      build: 
         context: .\OrderApi
         dockerfile: Dockerfile
      image: shoes/order 
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         IdentityUrl: http://tokenserver
         SQLSERVER_HOST: mssqlcontainer
         SA_PASSWORD: ProductApi(!)
         DATABASE: OrdersDb
      container_name: orderapi
      ports:
         - "5004:80"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver
         - tokenserver
         - rabbitmq

   mssqlserver:
      image: "microsoft/mssql-server-linux:latest"
      ports:
         - "1446:1443"
      container_name: mssqlcontainer
      environment:
         ACCEPT_EULA: Y
         SA_PASSWORD: ProductApi(!)
      networks:
         - backend

   basket.data:
      image: redis
      ports:
         - "6378:6379"
      networks:
         - backend

   rabbitmq:
      image: rabbitmq:3-management
      container_name: rabbitmq
      hostname: myrabbitmq
      ports:
         - "15672:15672"
         - "5672:5672"
         - "5671:5671"
      volumes:
         - ~/rabbitmq:/var/lib/rabbitmq/mnesia
      networks:
         - backend